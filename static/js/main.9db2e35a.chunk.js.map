{"version":3,"sources":["redux/dialogs-reducer.js","components/Navbar/Navbar.module.css","api/api.js","assets/images/5.gif","components/common/Preloader/Preloader.js","reportWebVitals.js","components/Navbar/Navbar.jsx","utils/objects-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","assets/images/user.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Users2/Users2.jsx","api/api2.js","redux/users2-reducer.js","components/Users2/Users2Container.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspence.js","index.js","components/Users/users.module.css","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Preloader","props","className","s","preloader","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","nav","item","to","activeClassName","activeLink","active","updateOjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","photos","small","userPhoto","disabled","some","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","React","Component","compose","connect","bind","page","totalCount","Users2","onPageChanged2","unfollow2","follow2","usersAPI2","FOLLOW2","UNFOLLOW2","SET_USERS2","SET_CURRENT_PAGE2","SET_TOTAL_USERS_COUNT2","TOGGLE_IS_FETCHING2","TOGGLE_IS_FOLLOWING_PROGRESS2","toggleFollowingProgress2","usersReducer2","userId2","UsersContainer2","setCurrentPage","getUsers2","usersPage2","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","intialState","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","Users2Container","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","TextArea","restProps","placeholder","validators","component","text","validate","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.9db2e35a.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dima'},\r\n        {id: 2, name: 'Vika'},\r\n        {id: 3, name: 'Aleksey'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Wanna have sex?'},\r\n        {id: 3, message: 'NO'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__RjQDq\",\"item\":\"Navbar_item__2rsqK\",\"activeLink\":\"Navbar_activeLink__13UVp\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {\r\n            \"API-KEY\": \"def74a82-d2ff-4139-af52-4693cff11c2a\"\r\n        }\r\n    }\r\n);\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object')\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    },\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n}","export default __webpack_public_path__ + \"static/media/5.6c00d4a8.gif\";","import React from 'react';\r\nimport s from \"../../Users/users.module.css\";\r\nimport preloader from \"../../../assets/images/5.gif\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img className={s.preloader} src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to='/users2' activeClassName={s.activeLink}>Users2</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","export const updateOjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateOjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: true})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateOjectInArray(state.users, action.userId,\r\n                    \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(page));\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.834227f9.png\";","import React from 'react';\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return (\r\n        <div>\r\n<span>\r\n    <div>\r\n        <NavLink to={'/profile/' + user.id}>\r\n        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n             className={s.userPhoto}/>\r\n        </NavLink>\r\n    </div>\r\n    <div>\r\n        {user.followed\r\n            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                      onClick={() => {\r\n                          unfollow(user.id)\r\n                      }}>\r\n                Unfollow\r\n            </button>\r\n            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                      onClick={() => {\r\n                          follow(user.id)\r\n                      }}>\r\n                Follow\r\n            </button>}\r\n            </div>\r\n            </span>\r\n            <span>\r\n            <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n            <div>{\"user.location.country\"}</div>\r\n            <div>{\"user.location.city\"}</div>\r\n            </span>\r\n            </span>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize} onPageChanged={onPageChanged} users={users}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching, getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, toggleFollowingProgress,\r\n        getUsers: requestUsers\r\n    }))\r\n(UsersContainer)","import React from 'react';\r\nimport s from \"../Users/users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png'\r\n\r\n\r\nlet Users2 = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && s.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged2(p)\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                    <span>\r\n                    <div><img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.userPhoto}/></div>\r\n                    <div> {u.followed\r\n                        ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.unfollow2(u.id)\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            props.follow2(u.id)\r\n                        }}>Follow</button>}\r\n                            </div>\r\n                            </span>\r\n                <div>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </div>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users2;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {\r\n            \"API-KEY\": \"def74a82-d2ff-4139-af52-4693cff11c2a\"\r\n        }\r\n    }\r\n);\r\n\r\nexport const usersAPI2 = {\r\n    getUsers2_2(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    notFollow(id = 1) {\r\n        return instance.delete(`follow/${id}`,\r\n        ).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n    goFollow(id = 1) {\r\n        return instance.post(`follow/${id}`,\r\n        ).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n","import {usersAPI2} from \"../api/api2\";\r\n\r\nconst FOLLOW2 = 'FOLLOW2';\r\nconst UNFOLLOW2 = 'UNFOLLOW2';\r\nconst SET_USERS2 = 'SET_USERS2';\r\nconst SET_CURRENT_PAGE2 = 'SET_CURRENT_PAGE2';\r\nconst SET_TOTAL_USERS_COUNT2 = 'SET_TOTAL_USERS_COUNT2';\r\nconst TOGGLE_IS_FETCHING2 = 'TOGGLE_IS_FETCHING2';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS2 = 'TOGGLE_IS_FOLLOWING_PROGRESS2';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer2 = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW2:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId2) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOW2:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId2) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS2: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE2: {\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT2: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING2: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS2: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userId2) => ({type: FOLLOW2, userId2});\r\nexport const unfollow = (userId2) => ({type: UNFOLLOW2, userId2});\r\nexport const setUsers = (users) => ({type: SET_USERS2, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE2, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT2, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING2, isFetching});\r\nexport const toggleFollowingProgress2 = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS2,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\nexport const getUsers2 = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        usersAPI2.getUsers2_2(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setTotalUsersCount(data.totalCount));\r\n                dispatch(toggleIsFetching(false))\r\n            });\r\n    }\r\n}\r\n\r\nexport const follow2 = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress2(true, userId));\r\n        usersAPI2.goFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode == 0) {\r\n                    dispatch(follow(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress2(false, userId));\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow2 = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress2(true, userId));\r\n        usersAPI2.notFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode == 0) {\r\n                    dispatch(unfollow(userId))\r\n                }\r\n                dispatch(toggleFollowingProgress2(false, userId));\r\n            });\r\n\r\n    }\r\n}\r\n\r\nexport default usersReducer2;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users2 from \"../Users2/Users2\";\r\nimport {\r\n    follow2, getUsers2,\r\n    setCurrentPage, toggleFollowingProgress2,\r\n    unfollow2\r\n} from \"../../redux/users2-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\n\r\n\r\nclass UsersContainer2 extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsers2(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged2 = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsers2(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users2 totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    users={this.props.users}\r\n                    unfollow2={this.props.unfollow2}\r\n                    follow2={this.props.follow2}\r\n                    onPageChanged2={this.onPageChanged2}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                // toggleFollowingProgress2={this.props.toggleFollowingProgress2}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage2.users,\r\n        pageSize: state.usersPage2.pageSize,\r\n        totalUsersCount: state.usersPage2.totalUsersCount,\r\n        currentPage: state.usersPage2.currentPage,\r\n        isFetching: state.usersPage2.isFetching,\r\n        followingInProgress: state.usersPage2.followingInProgress\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow2,\r\n    unfollow2,\r\n    setCurrentPage,\r\n    toggleFollowingProgress2,\r\n    getUsers2\r\n})(UsersContainer2);\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src='https://img2.freepng.ru/20180406/xgq/kisspng-logo-c-letter-letter-c-5ac700f5a7ff30.0580812215229913496881.jpg'/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const OnSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={OnSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n","import React from 'react';\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;","let intialState = {};\r\n\r\nconst sidebarReducer = (state = intialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport usersReducer2 from \"./users2-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    usersPage2: usersReducer2,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\nexport default store;","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\nimport React from \"react\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport Users2Container from \"./components/Users2/Users2Container\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspence} from \"./hoc/withSuspence\";\nimport store from \"./redux/redux-store\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={() => {\n                        return <React.Suspense fallback={<Preloader/>}>\n                            <DialogsContainer/>\n                        </React.Suspense>\n                    }}/>\n                    <Route path='/profile/:userId?' render={withSuspence(ProfileContainer)}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/users2' render={() => <Users2Container/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n    return <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;","import React from 'react';\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspence = (Component) => {\r\n\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(\n    <SamuraiJSApp/>,\n    document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1KJb9\",\"selectedPage\":\"users_selectedPage__2KiWk\",\"preloader\":\"users_preloader__34gEY\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}> <textarea {...restProps} {...input}/></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}> <input {...restProps} {...input}/></FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        />{text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2ASij\",\"error\":\"FormsControls_error__3EKqx\",\"formSummaryError\":\"FormsControls_formSummaryError__1PjbA\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2-riO\",\"pageNumber\":\"Paginator_pageNumber__6zdjZ\",\"selectedPage\":\"Paginator_selectedPage__1JSBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Axak\",\"loginBlock\":\"Header_loginBlock__2nIup\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello mazafaka!', likesCount: 2},\r\n        {id: 2, message: 'Yooo maan wasssap maaaan', likesCount: 23}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n\r\n\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}