{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","fullName","Preloader","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","reverse","map","p","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizeduserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.953233db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__IBQCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1RkSb\",\"posts\":\"MyPosts_posts__2aKt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2WTSJ\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    };\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({status: this.props.status})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"---\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange}\r\n                           autoFocus={true}\r\n                           onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}>\r\n                    </input>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    onBlur={deactivateEditMode}\r\n                    autoFocus={true}\r\n                    value={status}\r\n                >\r\n                </input>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <div>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status}\r\n                                        updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://politobzor.net/uploads/posts/2015-05/org_vkkn955.jpeg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     return nextProps != this.props || nextState != this.state;\r\n    // }\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n\r\n    let addAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={addAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea} name=\"newPostText\" placeholder='Enter your post'\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"dialogAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;\r\n\r\n","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPostText: state.profilePage.newPostText,\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizeduserId\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizeduserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)\r\n(ProfileContainer)"],"sourceRoot":""}